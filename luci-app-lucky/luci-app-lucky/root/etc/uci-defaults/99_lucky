#!/bin/sh

# 定义路径变量
CONFIG_BASE="/etc/config"
DEFAULT_DIRNAME="lucky.daji"
MAIN_CONFIG="lucky"

clean_up() {
    [ -n "$(uci -q get lucky.@lucky[-1].config)" ] &&
        uci -q delete lucky.@lucky[-1].config
}

trap clean_up EXIT

[ -n "$(uci -q get lucky.@lucky[-1].configdir)" ] && exit 0

if [ -n "$(uci -q get lucky.@lucky[-1].enabled)" ]; then
    if [ -n "$(uci -q get lucky.@lucky[-1].configdir)" ]; then
        exit 0
    else
        config_path="$(uci -q get lucky.@lucky[-1].config)"
        config_dir="${config_path:+$(dirname "$config_path")}"
        config_dir="${config_dir:-${CONFIG_BASE}/${DEFAULT_DIRNAME}}"

        uci -q batch <<EOF
set lucky.@lucky[-1].configdir=$config_dir
commit
EOF
    fi
else
    touch "${CONFIG_BASE}/${MAIN_CONFIG}"
    uci -q batch <<EOF
add lucky lucky
set lucky.@lucky[-1].enabled=1
set lucky.@lucky[-1].logger=1
set lucky.@lucky[-1].configdir=${CONFIG_BASE}/${DEFAULT_DIRNAME}
commit
EOF
fi

flush_cache() {
    # 第一步：清除所有Luci缓存
    rm -f /tmp/luci-indexcache* 2>/dev/null
    rm -f /tmp/luci-modulecache/* 2>/dev/null  # 针对OpenWrt 21.02+
    
    # 第二步：根据Web服务器类型重载
    if pgrep -x "uhttpd" >/dev/null; then
        killall -SIGHUP uhttpd 2>/dev/null    # uhttpd会重建缓存
    elif pgrep -x "nginx" >/dev/null; then
        /etc/init.d/nginx reload 2>/dev/null           # nginx reload触发Lua重载
    fi
    
    # 第三步：更新RPC服务
    /etc/init.d/rpcd reload 2>/dev/nul
}

# 清理缓存和自删除
flush_cache
[ "$?" = 0 ] && rm -f "$0" # 关键自删除操作

exit 0
